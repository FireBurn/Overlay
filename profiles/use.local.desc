# This file is deprecated as per GLEP 56 in favor of metadata.xml. Please add
# your descriptions to your package's metadata.xml ONLY.
# * generated automatically using egencache *

app-emulation/wine-any:capi - Enable ISDN support via CAPI
app-emulation/wine-any:custom-cflags - Bypass strip-flags; use at your own peril
app-emulation/wine-any:d3d9 - Apply highly experimental patches for Gallium Nine support. This patch may break some applications.
app-emulation/wine-any:dos - Pull in games-emulation/dosbox to run DOS applications
app-emulation/wine-any:gecko - Add support for the Gecko engine when using iexplore
app-emulation/wine-any:gstreamer - Use media-libs/gstreamer to provide DirectShow functionality;
app-emulation/wine-any:mono - Add support for .NET using Wine's Mono add-on
app-emulation/wine-any:netapi - Use libnetapi from net-fs/samba to support Windows networks in netapi32.dll
app-emulation/wine-any:opencl - Enable OpenCL support
app-emulation/wine-any:osmesa - Add support for OpenGL in bitmaps using libOSMesa
app-emulation/wine-any:pcap - Support packet capture software (e.g. wireshark)
app-emulation/wine-any:perl - Install helpers written in perl (winedump/winemaker)
app-emulation/wine-any:pipelight - Apply Wine-Staging patches for Pipelight/Silverlight support
app-emulation/wine-any:prelink - Run prelink on DLLs during build; For versions before wine-1.7.55 or hardened, do not disable if you do not know what this means as it can break things at runtime
app-emulation/wine-any:realtime - Pull in sys-auth/rtkit for low-latency pulseaudio support
app-emulation/wine-any:run-exes - Use Wine to open and run .EXE and .MSI files
app-emulation/wine-any:s3tc - Pull in media-libs/libtxc_dxtn for DXTn texture compression, needed for many games
app-emulation/wine-any:samba - Add support for NTLM auth. see http://wiki.winehq.org/NtlmAuthSetupGuide and http://wiki.winehq.org/NtlmSigningAndSealing
app-emulation/wine-any:staging - Apply Wine-Staging patches for advanced feature support that haven't made it into upstream Wine yet
app-emulation/wine-any:themes - Support GTK+:3 window theming through Wine-Staging
app-emulation/wine-any:udev - Use virtual/libudev to provide plug and play support
app-emulation/wine-staging:capi - Enable ISDN support via CAPI
app-emulation/wine-staging:custom-cflags - Bypass strip-flags; use at your own peril
app-emulation/wine-staging:dos - Pull in games-emulation/dosbox to run DOS applications
app-emulation/wine-staging:gecko - Add support for the Gecko engine when using iexplore
app-emulation/wine-staging:gssapi - Use GSSAPI (Kerberos SSP support)
app-emulation/wine-staging:gstreamer - Use media-libs/gstreamer to provide DirectShow functionality;
app-emulation/wine-staging:mono - Add support for .NET using Wine's Mono add-on
app-emulation/wine-staging:netapi - Use libnetapi from net-fs/samba to support Windows networks in netapi32.dll
app-emulation/wine-staging:opencl - Enable OpenCL support
app-emulation/wine-staging:osmesa - Add support for OpenGL in bitmaps using libOSMesa
app-emulation/wine-staging:pcap - Support packet capture software (e.g. wireshark)
app-emulation/wine-staging:perl - Install helpers written in perl (winedump/winemaker)
app-emulation/wine-staging:pipelight - Apply Wine-Staging patches for Pipelight/Silverlight support
app-emulation/wine-staging:prelink - Run prelink on DLLs during build; For versions before wine-1.7.55 or hardened, do not disable if you do not know what this means as it can break things at runtime
app-emulation/wine-staging:realtime - Pull in sys-auth/rtkit for low-latency pulseaudio support
app-emulation/wine-staging:run-exes - Use Wine to open and run .EXE and .MSI files
app-emulation/wine-staging:s3tc - Pull in media-libs/libtxc_dxtn for DXTn texture compression, needed for many games
app-emulation/wine-staging:samba - Add support for NTLM auth. see http://wiki.winehq.org/NtlmAuthSetupGuide and http://wiki.winehq.org/NtlmSigningAndSealing
app-emulation/wine-staging:staging - Apply Wine-Staging patches for advanced feature support that haven't made it into upstream Wine yet
app-emulation/wine-staging:themes - Support GTK+:3 window theming through Wine-Staging
app-emulation/wine-staging:udev - Use virtual/libudev to provide plug and play support
app-emulation/wine-staging:vulkan - Enable Vulkan drivers
app-emulation/wine-vanilla:capi - Enable ISDN support via CAPI
app-emulation/wine-vanilla:custom-cflags - Bypass strip-flags; use at your own peril
app-emulation/wine-vanilla:dos - Pull in games-emulation/dosbox to run DOS applications
app-emulation/wine-vanilla:gecko - Add support for the Gecko engine when using iexplore
app-emulation/wine-vanilla:gstreamer - Use media-libs/gstreamer to provide DirectShow functionality;
app-emulation/wine-vanilla:mono - Add support for .NET using Wine's Mono add-on
app-emulation/wine-vanilla:netapi - Use libnetapi from net-fs/samba to support Windows networks in netapi32.dll
app-emulation/wine-vanilla:opencl - Enable OpenCL support
app-emulation/wine-vanilla:osmesa - Add support for OpenGL in bitmaps using libOSMesa
app-emulation/wine-vanilla:pcap - Support packet capture software (e.g. wireshark)
app-emulation/wine-vanilla:perl - Install helpers written in perl (winedump/winemaker)
app-emulation/wine-vanilla:prelink - Run prelink on DLLs during build; For versions before wine-1.7.55 or hardened, do not disable if you do not know what this means as it can break things at runtime
app-emulation/wine-vanilla:realtime - Pull in sys-auth/rtkit for low-latency pulseaudio support
app-emulation/wine-vanilla:run-exes - Use Wine to open and run .EXE and .MSI files
app-emulation/wine-vanilla:samba - Add support for NTLM auth. see http://wiki.winehq.org/NtlmAuthSetupGuide and http://wiki.winehq.org/NtlmSigningAndSealing
app-emulation/wine-vanilla:udev - Use virtual/libudev to provide plug and play support
media-gfx/fontforge:truetype-debugger - Enable truetype debugger in fontforge
media-libs/mesa:bindist - Disable patent-encumbered ARB_texture_float, EXT_texture_shared_exponent, and EXT_packed_float extensions.
media-libs/mesa:classic - Build drivers based on the classic architecture.
media-libs/mesa:d3d9 - Enable Direct 3D9 API through Nine state tracker. Can be used together with patched wine.
media-libs/mesa:dri3 - Enable DRI3 support.
media-libs/mesa:egl - Enable EGL support.
media-libs/mesa:gallium - Build drivers based on Gallium3D, the new architecture for 3D graphics drivers.
media-libs/mesa:gbm - Enable the Graphics Buffer Manager for EGL on KMS.
media-libs/mesa:gles1 - Enable GLESv1 support.
media-libs/mesa:gles2 - Enable GLESv2 support.
media-libs/mesa:llvm - Enable LLVM backend for Gallium3D.
media-libs/mesa:opencl - Enable the Clover Gallium OpenCL state tracker.
media-libs/mesa:openmax - Enable OpenMAX video decode/encode acceleration for Gallium3D.
media-libs/mesa:osmesa - Build the Mesa library for off-screen rendering.
media-libs/mesa:pax_kernel - Enable if the user plans to run the package under a pax enabled hardened kernel
media-libs/mesa:pic - disable optimized assembly code that is not PIC friendly
media-libs/mesa:unwind - Add support for stack trace unwinding and function name resolution
media-libs/mesa:valgrind - Compile in valgrind memory hints
media-libs/mesa:vdpau - Enable the VDPAU acceleration interface for the Gallium3D Video Layer.
media-libs/mesa:vulkan - Enable Vulkan drivers
media-libs/mesa:wayland - Enable support for dev-libs/wayland
media-libs/mesa:xa - Enable the XA (X Acceleration) API for Gallium3D.
media-libs/mesa:xvmc - Enable the XvMC acceleration interface for the Gallium3D Video Layer.
media-sound/pulseaudio:X - Build the X11 publish module to export PulseAudio information through X11 protocol for clients to make use. Don't enable this flag if you want to use a system wide instance. If unsure, enable this flag.
media-sound/pulseaudio:alsa-plugin - Request installing media-plugins/alsa-plugins with PulseAudio plugin enabled. This ensures that clients supporting ALSA only will use PulseAudio.
media-sound/pulseaudio:asyncns - Use libasyncns for asynchronous name resolution.
media-sound/pulseaudio:doc - Build the doxygen-described API documentation.
media-sound/pulseaudio:equalizer - Enable the equalizer module (requires sci-libs/fftw).
media-sound/pulseaudio:gdbm - Use sys-libs/gdbm to store PulseAudio databases. Recommended for desktop usage. This flag causes the whole package to be licensed under GPL-2 or later.
media-sound/pulseaudio:glib - Add support to dev-libs/glib-based mainloop for the libpulse client library, to allow using libpulse on glib-based programs.
media-sound/pulseaudio:gnome - Use GConf to store user preferences on streams and so on. Don't enable this flag if you want to use a system wide instance. If unsure, enable this flag.
media-sound/pulseaudio:native-headset - Build with native HSP backend for bluez 5.
media-sound/pulseaudio:ofono-headset - Build with oFono HFP backend for bluez 5, requires net-misc/ofono.
media-sound/pulseaudio:oss - Enable OSS sink/source (output/input). Deprecated, upstream does not support this on systems where other sink/source systems are available (i.e.: Linux). The padsp wrapper is now always build if the system supports OSS at all.
media-sound/pulseaudio:realtime - Makes PulseAudio use RealtimeKit (sys-auth/rtkit) to get real-time priority while running.
media-sound/pulseaudio:ssl - Use dev-libs/openssl to provide support for RAOP (AirPort) streaming.
media-sound/pulseaudio:system-wide - Allow preparation and installation of the system-wide init script for PulseAudio. Since this support is only supported for embedded situations, do not enable without reading the upstream instructions at https://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/WhatIsWrongWithSystemWide/ .
media-sound/pulseaudio:systemd - Build with sys-apps/systemd support to replace standalone ConsoleKit.
media-sound/pulseaudio:webrtc-aec - Uses the webrtc.org AudioProcessing library for enhancing VoIP calls greatly in applications that support it by performing acoustic echo cancellation, analog gain control, noise suppression and other processing.
sys-devel/gcc:awt - Useful only when building GCJ, this enables Abstract Window Toolkit (AWT) peer support on top of GTK+
sys-devel/gcc:cilk - Support the Cilk Plus language (C/C++ based languages for parallel programming)
sys-devel/gcc:d - Enable support for the D programming language
sys-devel/gcc:fixed-point - Enable fixed-point arithmetic support for MIPS targets in gcc (Warning: significantly increases compile time!)
sys-devel/gcc:go - Build the GCC Go language frontend.
sys-devel/gcc:graphite - Add support for the framework for loop optimizations based on a polyhedral intermediate representation
sys-devel/gcc:jit - Enable libgccjit so other applications can embed gcc for Just-In-Time compilation. This will slow down the compiler a bit as it forces all of the toolchain to be shared libs.
sys-devel/gcc:libssp - Build SSP support into a dedicated library rather than use the code in the C library (DO NOT ENABLE THIS IF YOU DON'T KNOW WHAT IT DOES)
sys-devel/gcc:mpx - Enable support for Intel Memory Protection Extensions (MPX)
sys-devel/gcc:mudflap - Add support for mudflap, a pointer use checking library
sys-devel/gcc:nopie - Disable PIE support (NOT FOR GENERAL USE)
sys-devel/gcc:nossp - Disable SSP support (NOT FOR GENERAL USE)
sys-devel/gcc:objc - Build support for the Objective C code language
sys-devel/gcc:objc++ - Build support for the Objective C++ language
sys-devel/gcc:objc-gc - Build support for the Objective C code language Garbage Collector
sys-devel/gcc:pgo - Build GCC using Profile Guided Optimization (PGO)
sys-devel/gcc:regression-test - Run the testsuite and install the results (requires FEATURES=test)
sys-devel/gcc:sanitize - Build support for various sanitizer functions (ASAN/TSAN/etc...)
sys-devel/gcc:ssp - Build packages with stack smashing protector on by default
sys-devel/gcc:vtv - Build support for virtual table verification (a C++ hardening feature)
sys-devel/gdb:client - Install the main "gdb" program (most people want this)
sys-devel/gdb:lzma - Support lzma compression in ELF debug info
sys-devel/gdb:multitarget - Support all known targets in one gdb binary
sys-devel/gdb:python - Enable support for the new internal scripting language, as well as extended pretty printers
sys-devel/gdb:server - Install the "gdbserver" program (useful for embedded/remote targets)
sys-devel/gdb:xml - Support parsing XML data files needed (at least) for cpu features, memory maps, and syscall tracing
sys-libs/libomp:hwloc - Enable CPU affinity support via hwloc
sys-libs/libomp:ompt - Enable OpenMP Tools Interface support
www-client/firefox:bindist - Disable official Firefox branding (icons, name) which are not binary-redistributable according to upstream.
www-client/firefox:custom-optimization - Build with user-specified compiler optimizations (-Os, -O0, -O1, -O2, -O3) from CFLAGS (unsupported)
www-client/firefox:eme-free - Disable EME (DRM plugin) cabability at build time
www-client/firefox:gmp-autoupdate - Allow Gecko Media Plugins (binary blobs) to be automatically downloaded and kept up-to-date in user profiles
www-client/firefox:gtk2 - Use the cairo-gtk2 rendering engine
www-client/firefox:hwaccel - Force-enable hardware-accelerated rendering (Mozilla bug 594876)
www-client/firefox:jemalloc - Enable or disable jemalloc
www-client/firefox:pgo - Add support for profile-guided optimization using gcc-4.5, for faster binaries. This option will double the compile time.
www-client/firefox:rust - Enable support for using rust compiler (experimental)
www-client/firefox:screenshot - Allow to disable screenshot extension in global profile
www-client/firefox:system-cairo - Use the system-wide x11-libs/cairo instead of bundled.
www-client/firefox:system-harfbuzz - Use the system-wide media-libs/harfbuzz and media-gfx/graphite2 instead of bundled.
www-client/firefox:system-icu - Use the system-wide dev-libs/icu instead of bundled.
www-client/firefox:system-jpeg - Use the system-wide media-libs/libjpeg-turbo instead of bundled.
www-client/firefox:system-libevent - Use the system-wide dev-libs/libevent instead of bundled.
www-client/firefox:system-libvpx - Use the system-wide media-libs/libvpx instead of bundled.
www-client/firefox:system-sqlite - Use the system-wide dev-db/sqlite installation with secure-delete enabled
x11-libs/libdrm:libkms - Enable building of libkms, a library for applications to interface with KMS
x11-libs/libdrm:valgrind - Compile in valgrind memory hints
