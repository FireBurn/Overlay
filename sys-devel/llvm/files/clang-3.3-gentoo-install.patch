From 1a539a8868070e49966c6b5f5e4b9f1257acd7dc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Micha=C5=82=20G=C3=B3rny?= <gentoo@mgorny.alt.pl>
Date: Fri, 19 Jul 2013 10:23:57 +0200
Subject: [PATCH] clang gentoo install

---
 tools/clang/lib/Driver/Tools.cpp        | 4 ++--
 tools/clang/tools/scan-build/scan-build | 4 ++--
 tools/clang/tools/scan-view/scan-view   | 2 +-
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/tools/clang/lib/Driver/Tools.cpp b/tools/clang/lib/Driver/Tools.cpp
index e014980..6e60513 100644
--- a/tools/clang/lib/Driver/Tools.cpp
+++ b/tools/clang/lib/Driver/Tools.cpp
@@ -219,7 +219,7 @@ static void addProfileRT(const ToolChain &TC, const ArgList &Args,
   // libprofile_rt.so. We used to use the -l:libprofile_rt.a syntax, but that is
   // not supported by old linkers.
   std::string ProfileRT =
-    std::string(TC.getDriver().Dir) + "/../lib/libprofile_rt.a";
+    std::string(TC.getDriver().Dir) + "/../@libdir@/llvm/libprofile_rt.a";
 
   CmdArgs.push_back(Args.MakeArgString(ProfileRT));
 }
@@ -6177,7 +6177,7 @@ void gnutools::Link::ConstructJob(Compilation &C, const JobAction &JA,
   // forward.
   if (D.IsUsingLTO(Args) || Args.hasArg(options::OPT_use_gold_plugin)) {
     CmdArgs.push_back("-plugin");
-    std::string Plugin = ToolChain.getDriver().Dir + "/../lib/LLVMgold.so";
+    std::string Plugin = ToolChain.getDriver().Dir + "/../@libdir@/llvm/LLVMgold.so";
     CmdArgs.push_back(Args.MakeArgString(Plugin));
 
     // Try to pass driver level flags relevant to LTO code generation down to
diff --git a/tools/clang/tools/scan-build/scan-build b/tools/clang/tools/scan-build/scan-build
index 22d5289..dcb4822 100755
--- a/tools/clang/tools/scan-build/scan-build
+++ b/tools/clang/tools/scan-build/scan-build
@@ -410,7 +410,7 @@ sub CopyFiles {
 
   my $Dir = shift;
 
-  my $JS = Cwd::realpath("$RealBin/sorttable.js");
+  my $JS = Cwd::realpath("@EPREFIX@/usr/share/llvm/sorttable.js");
   
   DieDiag("Cannot find 'sorttable.js'.\n")
     if (! -r $JS);  
@@ -420,7 +420,7 @@ sub CopyFiles {
   DieDiag("Could not copy 'sorttable.js' to '$Dir'.\n")
     if (! -r "$Dir/sorttable.js");
     
-  my $CSS = Cwd::realpath("$RealBin/scanview.css");
+  my $CSS = Cwd::realpath("@EPREFIX@/usr/share/llvm/scanview.css");
   
   DieDiag("Cannot find 'scanview.css'.\n")
     if (! -r $CSS);
diff --git a/tools/clang/tools/scan-view/scan-view b/tools/clang/tools/scan-view/scan-view
index fb27da6..1f8ddb8 100755
--- a/tools/clang/tools/scan-view/scan-view
+++ b/tools/clang/tools/scan-view/scan-view
@@ -54,7 +54,7 @@ def start_browser(port, options):
     webbrowser.open(url)
 
 def run(port, options, root):
-    import ScanView
+    from clang import ScanView
     try:
         print 'Starting scan-view at: http://%s:%d'%(options.host,
                                                      port)
-- 
1.8.3.2

--- a/tools/clang/CMakeLists.txt
+++ b/tools/clang/CMakeLists.txt
@@ -241,6 +241,11 @@
   set_target_properties(${name} PROPERTIES FOLDER "Clang executables")
 endmacro(add_clang_executable)
 
+macro(add_clang_tool name)
+  add_llvm_tool( ${name} ${ARGN} )
+  set_target_properties(${name} PROPERTIES FOLDER "Clang executables")
+endmacro(add_clang_tool)
+
 include_directories(BEFORE
   ${CMAKE_CURRENT_BINARY_DIR}/include
   ${CMAKE_CURRENT_SOURCE_DIR}/include

--- a/tools/clang/tools/driver/CMakeLists.txt
+++ b/tools/clang/tools/driver/CMakeLists.txt
@@ -11,7 +11,7 @@
   selectiondag
   )
 
-add_clang_executable(clang
+add_clang_tool(clang
   driver.cpp
   cc1_main.cpp
   cc1as_main.cpp
@@ -84,8 +84,7 @@
 set_property(DIRECTORY APPEND
   PROPERTY ADDITIONAL_MAKE_CLEAN_FILES ${clang_cl})
 
-install(TARGETS clang
-  RUNTIME DESTINATION bin)
-
 # Create the clang++ and clang-cl symlinks at installation time.
-install(SCRIPT clang_symlink.cmake -DCMAKE_INSTALL_PREFIX=\"${CMAKE_INSTALL_PREFIX}\")
+if( LLVM_BUILD_TOOLS )
+  install(SCRIPT clang_symlink.cmake -DCMAKE_INSTALL_PREFIX=\"${CMAKE_INSTALL_PREFIX}\")
+endif()

--- a/tools/clang/tools/clang-check/CMakeLists.txt
+++ b/tools/clang/tools/clang-check/CMakeLists.txt
@@ -6,7 +6,7 @@
   mc
   )
 
-add_clang_executable(clang-check
+add_clang_tool(clang-check
   ClangCheck.cpp
   )
 
@@ -16,6 +16,3 @@
   clangRewriteFrontend
   clangStaticAnalyzerFrontend
   )
-
-install(TARGETS clang-check
-  RUNTIME DESTINATION bin)

--- a/tools/clang/tools/clang-format/CMakeLists.txt
+++ b/tools/clang/tools/clang-format/CMakeLists.txt
@@ -1,7 +1,7 @@
 set(LLVM_LINK_COMPONENTS support)
 set(LLVM_USED_LIBS clangFormat clangTooling clangBasic clangAST)
 
-add_clang_executable(clang-format
+add_clang_tool(clang-format
   ClangFormat.cpp
   )
 
@@ -12,5 +12,6 @@
   clangRewriteFrontend
   )
 
-install(TARGETS clang-format RUNTIME DESTINATION bin)
-install(PROGRAMS git-clang-format DESTINATION bin)
+if( LLVM_BUILD_TOOLS )
+  install(PROGRAMS git-clang-format DESTINATION bin)
+endif()
