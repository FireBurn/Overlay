--- a/third_party/blink/renderer/platform/exported/web_time_range.cc.ORIG	2019-08-06 13:56:48.000000000 +0200
+++ b/third_party/blink/renderer/platform/exported/web_time_range.cc	2019-08-09 14:54:04.972657753 +0200
@@ -30,6 +30,7 @@
 
 #include "third_party/blink/public/platform/web_time_range.h"
 
+#include <limits>
 #include <cmath>
 
 namespace blink {
@@ -90,8 +91,8 @@
 
 void WebTimeRanges::Invert() {
   WebTimeRanges inverted;
-  double pos_inf = std::numeric_limits<double>::infinity();
-  double neg_inf = -std::numeric_limits<double>::infinity();
+  double pos_inf = ::std::numeric_limits<double>::infinity();
+  double neg_inf = -::std::numeric_limits<double>::infinity();
 
   if (!size()) {
     inverted.Add(neg_inf, pos_inf);
@@ -129,7 +130,7 @@
 double WebTimeRanges::Nearest(double new_playback_position,
                               double current_playback_position) const {
   double best_match = 0;
-  double best_delta = std::numeric_limits<double>::infinity();
+  double best_delta = ::std::numeric_limits<double>::infinity();
   for (const WebTimeRange& range : *this) {
     double start_time = range.start;
     double end_time = range.end;
