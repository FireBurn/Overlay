From a01010a50904a849460d5617a6e75599413371b2 Mon Sep 17 00:00:00 2001
From: Raphael Kubo da Costa <raphael.kubo.da.costa@intel.com>
Date: Wed, 15 May 2019 03:54:24 +0000
Subject: [PATCH] LibYUVImageProcessor: Do not rely on C++20 features in DCHECK_NE call

Follow-up to commit 3a6ca96308b4 ("media/gpu: LibYUVImageProcessor: Support
DMABUF-backed VideoFrame on input"), which added a call that looks like

    DCHECK_NE(foo, nullptr);

where |foo| is a std::unique_ptr. This fails with libstdc++ with a error
like

../../media/gpu/libyuv_image_processor.cc:208:5: error: no matching function for call to 'MakeCheckOpValueString'
    DCHECK_NE(video_frame_mapper_, nullptr);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../base/logging.h:838:31: note: expanded from macro 'DCHECK_NE'
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../base/logging.h:809:29: note: expanded from macro 'DCHECK_OP'
  EAT_STREAM_PARAMETERS << (::logging::MakeCheckOpValueString(      \
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../base/logging.h:622:18: note: candidate function not viable: no known conversion from 'std::unique_ptr<VideoFrameMapper>' to 'std::nullptr_t' (aka 'nullptr_t') for 2nd argument
BASE_EXPORT void MakeCheckOpValueString(std::ostream* os, std::nullptr_t p);
                 ^
../../base/logging.h:593:1: note: candidate template ignored: requirement 'base::internal::SupportsOstreamOperator<const unique_ptr<VideoFrameMapper, default_delete<VideoFrameMapper> > &>::value' was not satisfied [with T = std::unique_ptr<media::VideoFrameMapper, std::default_delete<media::VideoFrameMapper> >]
MakeCheckOpValueString(std::ostream* os, const T& v) {
^
../../base/logging.h:606:1: note: candidate template ignored: requirement 'std::is_function<typename std::remove_pointer<unique_ptr<VideoFrameMapper, default_delete<VideoFrameMapper> > >::type>::value' was not satisfied [with T = std::unique_ptr<media::VideoFrameMapper, std::default_delete<media::VideoFrameMapper> >]
MakeCheckOpValueString(std::ostream* os, const T& v) {
^
../../base/logging.h:617:1: note: candidate template ignored: requirement 'std::is_enum<unique_ptr<VideoFrameMapper, default_delete<VideoFrameMapper> > >::value' was not satisfied [with T = std::unique_ptr<media::VideoFrameMapper, std::default_delete<media::VideoFrameMapper> >]
MakeCheckOpValueString(std::ostream* os, const T& v) {
^

because there is no operator<< overload for std::unique_ptr until
C++20 (libc++ just happens to have it).

Bug: 944822, 957519
Change-Id: Iea2fb35b06b7b0d0b9df7c7d728d274671052698
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1611608
Auto-Submit: Raphael Kubo da Costa <raphael.kubo.da.costa@intel.com>
Commit-Queue: Hirokazu Honda <hiroh@chromium.org>
Reviewed-by: Hirokazu Honda <hiroh@chromium.org>
Cr-Commit-Position: refs/heads/master@{#659823}
---

diff --git a/media/gpu/libyuv_image_processor.cc b/media/gpu/libyuv_image_processor.cc
index 3be31ae..09c053f 100644
--- a/media/gpu/libyuv_image_processor.cc
+++ b/media/gpu/libyuv_image_processor.cc
@@ -205,7 +205,7 @@
   DVLOGF(4);
 #if defined(OS_LINUX)
   if (input_frame->storage_type() == VideoFrame::STORAGE_DMABUFS) {
-    DCHECK_NE(video_frame_mapper_, nullptr);
+    DCHECK_NE(video_frame_mapper_.get(), nullptr);
     input_frame = video_frame_mapper_->Map(std::move(input_frame));
     if (!input_frame) {
       VLOGF(1) << "Failed to map input VideoFrame";
