--- a/gpu/command_buffer/service/memory_program_cache.cc
+++ b/gpu/command_buffer/service/memory_program_cache.cc
@@ -226,7 +226,7 @@ bool ProgramBinaryExtensionsAvailable() {
 // Returns an empty vector if compression fails.
 std::vector<uint8_t> CompressData(const std::vector<uint8_t>& data) {
   auto start_time = base::TimeTicks::Now();
-  Cr_z_uLongf compressed_size = compressBound(data.size());
+  uLongf compressed_size = compressBound(data.size());
   std::vector<uint8_t> compressed_data(compressed_size);
   // Level indicates a trade-off between compression and speed. Level 1
   // indicates fastest speed (with worst compression).
@@ -256,8 +256,8 @@ std::vector<uint8_t> DecompressData(const std::vector<uint8_t>& data,
                                     size_t max_size_bytes) {
   auto start_time = base::TimeTicks::Now();
   std::vector<uint8_t> decompressed_data(decompressed_size);
-  Cr_z_uLongf decompressed_size_out =
-      static_cast<Cr_z_uLongf>(decompressed_size);
+  uLongf decompressed_size_out =
+      static_cast<uLongf>(decompressed_size);
   auto result = uncompress(decompressed_data.data(), &decompressed_size_out,
                            data.data(), data.size());
 
