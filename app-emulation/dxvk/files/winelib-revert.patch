From 7e1c144e41f8fa2be95d7375fb0a2f04cccea04a Mon Sep 17 00:00:00 2001
From: Mike Lothian <mike@fireburn.co.uk>
Date: Sun, 17 May 2020 18:18:36 +0100
Subject: [PATCH] This re-adds winelib support

---
 README.md             |  2 ++
 build-win32.txt       |  8 ++---
 build-win64.txt       |  6 ++--
 build-wine32.txt      | 19 +++++++++++
 build-wine64.txt      | 19 +++++++++++
 meson.build           | 79 ++++++++++++++++++++++++++++---------------
 package-release.sh    | 13 +++++--
 src/d3d10/meson.build |  4 ++-
 8 files changed, 112 insertions(+), 38 deletions(-)
 create mode 100644 build-wine32.txt
 create mode 100644 build-wine64.txt

diff --git a/README.md b/README.md
index f1c67765..dd3d0d10 100644
--- a/README.md
+++ b/README.md
@@ -53,6 +53,8 @@ cd /your/target/directory/build.64
 ninja install
 ```
 
+A winelib build can be created by adding the `--winelib` argument.
+
 #### Compiling manually
 ```
 # 64-bit build. For 32-bit builds, replace
diff --git a/build-win32.txt b/build-win32.txt
index 97ec8a35..8e9ae94b 100644
--- a/build-win32.txt
+++ b/build-win32.txt
@@ -5,10 +5,10 @@ ar = 'i686-w64-mingw32-ar'
 strip = 'i686-w64-mingw32-strip'
 
 [properties]
-c_args=['-msse', '-msse2']
-cpp_args=['-msse', '-msse2']
-c_link_args = ['-static', '-static-libgcc']
-cpp_link_args = ['-static', '-static-libgcc', '-static-libstdc++']
+c_args= @CFLAGS@ + ['-msse', '-msse2']
+cpp_args= @CXXFLAGS@ + ['-msse', '-msse2']
+c_link_args = @LDFLAGS@ + ['-static', '-static-libgcc']
+cpp_link_args = @LDFLAGS@ + ['-static', '-static-libgcc', '-static-libstdc++']
 needs_exe_wrapper = true
 
 [host_machine]
diff --git a/build-win64.txt b/build-win64.txt
index 2a7fbee3..c081c876 100644
--- a/build-win64.txt
+++ b/build-win64.txt
@@ -5,8 +5,10 @@ ar = 'x86_64-w64-mingw32-ar'
 strip = 'x86_64-w64-mingw32-strip'
 
 [properties]
-c_link_args = ['-static', '-static-libgcc']
-cpp_link_args = ['-static', '-static-libgcc', '-static-libstdc++']
+c_args= @CFLAGS@ 
+cpp_args= @CXXFLAGS@
+c_link_args = @LDFLAGS@ + ['-static', '-static-libgcc']
+cpp_link_args = @LDFLAGS@ + ['-static', '-static-libgcc', '-static-libstdc++']
 needs_exe_wrapper = true
 
 [host_machine]
diff --git a/build-wine32.txt b/build-wine32.txt
new file mode 100644
index 00000000..1c5c5813
--- /dev/null
+++ b/build-wine32.txt
@@ -0,0 +1,19 @@
+[binaries]
+c = 'winegcc'
+cpp = 'wineg++'
+ar = 'ar'
+strip = 'strip'
+
+[properties]
+needs_exe_wrapper = true
+
+c_args= @CFLAGS@ + ['-m32', '-msse', '-msse2', '-fvisibility=hidden']
+cpp_args= @CXXFLAGS@ + ['-m32', '-msse', '-msse2', '-fvisibility=hidden', '-fvisibility-inlines-hidden', '-D__WIDL_objidl_generated_name_0000000C=']
+c_link_args = @LDFLAGS@ + ['-m32', '-mwindows', '-lpthread']
+cpp_link_args= @LDFLAGS@ + ['-m32', '-mwindows', '-lpthread']
+
+[host_machine]
+system = 'linux'
+cpu_family = 'x86'
+cpu = 'i686'
+endian = 'little'
diff --git a/build-wine64.txt b/build-wine64.txt
new file mode 100644
index 00000000..195ecca8
--- /dev/null
+++ b/build-wine64.txt
@@ -0,0 +1,19 @@
+[binaries]
+c = 'winegcc'
+cpp = 'wineg++'
+ar = 'ar'
+strip = 'strip'
+
+[properties]
+needs_exe_wrapper = true
+
+c_args= @CFLAGS@ + ['-m64', '-fvisibility=hidden']
+cpp_args= @CXXFLAGS@ + ['-m64', '-fvisibility=hidden', '-fvisibility-inlines-hidden', '-D__WIDL_objidl_generated_name_0000000C=']
+c_link_args = @LDFLAGS@ + ['-m64', '-mwindows', '-lpthread']
+cpp_link_args= @LDFLAGS@ + ['-m64', '-mwindows', '-lpthread']
+
+[host_machine]
+system = 'linux'
+cpu_family = 'x86_64'
+cpu = 'x86_64'
+endian = 'little'
diff --git a/meson.build b/meson.build
index a33bebe9..ad1c92db 100644
--- a/meson.build
+++ b/meson.build
@@ -25,44 +25,67 @@ else
   dxvk_library_path = meson.source_root() + '/lib32'
 endif
 
+code = '''#ifndef __WINE__
+#error 1
+#endif'''
+
+dxvk_winelib = dxvk_compiler.compiles(code, name: 'winelib check')
 dxvk_extradep = [ ]
 
-if dxvk_compiler.get_id() == 'msvc'
-  wrc = find_program('rc')
+if dxvk_winelib
+  if dxvk_compiler.has_argument('--no-gnu-unique')
+    add_project_arguments('--no-gnu-unique', language : ['cpp'])
+  endif
+  wrc = find_program('wrc')
+  lib_vulkan  = declare_dependency(link_args: [ '-lwinevulkan' ])
+  lib_d3d9    = declare_dependency(link_args: [ '-ld3d9' ])
+  lib_d3d11   = declare_dependency(link_args: [ '-ld3d11' ])
+  lib_dxgi    = declare_dependency(link_args: [ '-ldxgi' ])
+  lib_d3dcompiler_43 = declare_dependency(link_args: [ '-L'+dxvk_library_path, '-ld3dcompiler_43' ])
+  lib_d3dcompiler_47 = declare_dependency(link_args: [ '-ld3dcompiler' ])
+  dxvk_extradep += [ declare_dependency(link_args: [ '-ldl' ]) ]
+  exe_ext = '.exe.so'
+  dll_ext = '.dll'
+  res_ext = '.res'
+  def_spec_ext = '.spec'
 else
-  wrc = cpu_family == 'x86_64' ? find_program('x86_64-w64-mingw32-windres') : find_program('i686-w64-mingw32-windres')
-endif
-if cpu_family == 'x86'
-  if dxvk_compiler.has_link_argument('-Wl,--add-stdcall-alias')
-    add_global_link_arguments('-Wl,--add-stdcall-alias', language: 'cpp')
+  if dxvk_compiler.get_id() == 'msvc'
+    wrc = find_program('rc')
+  else
+    wrc = cpu_family == 'x86_64' ? find_program('x86_64-w64-mingw32-windres') : find_program('i686-w64-mingw32-windres')
   endif
-  if dxvk_compiler.has_link_argument('-Wl,--enable-stdcall-fixup')
-    add_global_link_arguments('-Wl,--enable-stdcall-fixup', language: 'cpp')
+  if cpu_family == 'x86'
+    if dxvk_compiler.has_link_argument('-Wl,--add-stdcall-alias')
+      add_global_link_arguments('-Wl,--add-stdcall-alias', language: 'cpp')
+    endif
+    if dxvk_compiler.has_link_argument('-Wl,--enable-stdcall-fixup')
+      add_global_link_arguments('-Wl,--enable-stdcall-fixup', language: 'cpp')
+    endif
   endif
-endif
 
-lib_vulkan  = dxvk_compiler.find_library('vulkan-1', dirs : dxvk_library_path)
-lib_d3d9    = dxvk_compiler.find_library('d3d9')
-lib_d3d11   = dxvk_compiler.find_library('d3d11')
-lib_dxgi    = dxvk_compiler.find_library('dxgi')
-lib_d3dcompiler_43 = dxvk_compiler.find_library('d3dcompiler_43', dirs : dxvk_library_path)
+  lib_vulkan  = dxvk_compiler.find_library('vulkan-1', dirs : dxvk_library_path)
+  lib_d3d9    = dxvk_compiler.find_library('d3d9')
+  lib_d3d11   = dxvk_compiler.find_library('d3d11')
+  lib_dxgi    = dxvk_compiler.find_library('dxgi')
+  lib_d3dcompiler_43 = dxvk_compiler.find_library('d3dcompiler_43', dirs : dxvk_library_path)
 
-if dxvk_compiler.get_id() == 'msvc'
-  lib_d3dcompiler_47 = dxvk_compiler.find_library('d3dcompiler')
-else
-  lib_d3dcompiler_47 = dxvk_compiler.find_library('d3dcompiler_47')
-endif
+  if dxvk_compiler.get_id() == 'msvc'
+    lib_d3dcompiler_47 = dxvk_compiler.find_library('d3dcompiler')
+  else
+    lib_d3dcompiler_47 = dxvk_compiler.find_library('d3dcompiler_47')
+  endif
 
-exe_ext = ''
-dll_ext = ''
+  exe_ext = ''
+  dll_ext = ''
 
-if dxvk_compiler.get_id() == 'msvc'
-  res_ext = '.res'
-else
-  res_ext = '.o'
-endif
+  if dxvk_compiler.get_id() == 'msvc'
+    res_ext = '.res'
+  else
+    res_ext = '.o'
+  endif
 
-def_spec_ext = '.def'
+  def_spec_ext = '.def'
+endif
 
 glsl_compiler = find_program('glslangValidator')
 glsl_generator = generator(glsl_compiler,
diff --git a/package-release.sh b/package-release.sh
index 3f5d9a4c..79c23d56 100755
--- a/package-release.sh
+++ b/package-release.sh
@@ -5,7 +5,7 @@ set -e
 shopt -s extglob
 
 if [ -z "$1" ] || [ -z "$2" ]; then
-  echo "Usage: $0 version destdir [--no-package] [--dev-build]"
+  echo "Usage: $0 version destdir [--no-package] [--dev-build] [--winelib]"
   exit 1
 fi
 
@@ -23,6 +23,7 @@ shift 2
 
 opt_nopackage=0
 opt_devbuild=0
+opt_winelib=0
 
 crossfile="build-win"
 
@@ -35,6 +36,10 @@ while [ $# -gt 0 ]; do
     opt_nopackage=1
     opt_devbuild=1
     ;;
+  "--winelib")
+    opt_winelib=1
+    crossfile="build-wine"
+    ;;
   *)
     echo "Unrecognized option: $1" >&2
     exit 1
@@ -61,8 +66,10 @@ function build_arch {
   ninja install
 
   if [ $opt_devbuild -eq 0 ]; then
-    # get rid of some useless .a files
-    rm "$DXVK_BUILD_DIR/x$1/"*.!(dll)
+    if [ $opt_winelib -eq 0 ]; then
+      # get rid of some useless .a files
+      rm "$DXVK_BUILD_DIR/x$1/"*.!(dll)
+    fi
     rm -R "$DXVK_BUILD_DIR/build.$1"
   fi
 }
diff --git a/src/d3d10/meson.build b/src/d3d10/meson.build
index dd6c574f..d1d8d6a6 100644
--- a/src/d3d10/meson.build
+++ b/src/d3d10/meson.build
@@ -12,9 +12,11 @@ d3d10_main_src = [
   'd3d10_state_block.cpp',
 ]
 
+d3d10_d3d11_dep = dxvk_winelib ? lib_d3d11 : d3d11_dep
+
 d3d10_core_dll = shared_library('d3d10core'+dll_ext, d3d10_core_src, d3d10_core_res,
   name_prefix         : '',
-  dependencies        : [ d3d11_dep ],
+  dependencies        : [ d3d10_d3d11_dep ],
   include_directories : dxvk_include_path,
   install             : true,
   objects             : not dxvk_msvc ? 'd3d10core'+def_spec_ext : [],
-- 
2.26.2

