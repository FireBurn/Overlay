From 4ea4dd5ddf2c628174c5434eee9f7467ec4ab570 Mon Sep 17 00:00:00 2001
From: Mike Lothian <mike@fireburn.co.uk>
Date: Sat, 16 May 2020 17:45:03 +0100
Subject: [PATCH] Revert "[vulkan] Remove VulkanFn wrapper"

This reverts commit e7455b6460b9dbfc5ae20e5d829b55f3d796c0cf.
---
 src/vulkan/vulkan_loader.h    |  6 +---
 src/vulkan/vulkan_loader_fn.h | 63 +++++++++++++++++++++++++++++++++++
 src/vulkan/vulkan_names.h     |  2 +-
 src/vulkan/vulkan_util.h      |  2 +-
 4 files changed, 66 insertions(+), 7 deletions(-)
 create mode 100644 src/vulkan/vulkan_loader_fn.h

diff --git a/src/vulkan/vulkan_loader.h b/src/vulkan/vulkan_loader.h
index e2a9f7e0..ce74c51b 100644
--- a/src/vulkan/vulkan_loader.h
+++ b/src/vulkan/vulkan_loader.h
@@ -3,11 +3,7 @@
 #include "../util/rc/util_rc.h"
 #include "../util/rc/util_rc_ptr.h"
 
-#define VK_USE_PLATFORM_WIN32_KHR 1
-#include <vulkan/vulkan.h>
-
-#define VULKAN_FN(name) \
-  ::PFN_ ## name name = reinterpret_cast<::PFN_ ## name>(sym(#name))
+#include "vulkan_loader_fn.h"
 
 namespace dxvk::vk {
   
diff --git a/src/vulkan/vulkan_loader_fn.h b/src/vulkan/vulkan_loader_fn.h
new file mode 100644
index 00000000..ecdd82a3
--- /dev/null
+++ b/src/vulkan/vulkan_loader_fn.h
@@ -0,0 +1,63 @@
+#pragma once
+
+/*
+ * In 32-bit winelib build, alignment of Vulkan structures may be different than what
+ * native C++ compiler expects. Wine exposes an extension, intended for winelib
+ * applications, that exposes native Vulkan APIs with win32 additions, but using
+ * native ABI.
+ */
+#ifdef __WINE__
+#pragma push_macro("_WIN32")
+#undef _WIN32
+#endif
+
+#define VK_USE_PLATFORM_WIN32_KHR 1
+#include <vulkan/vulkan.h>
+
+#ifdef __WINE__
+#pragma pop_macro("_WIN32")
+#endif
+
+#define VULKAN_FN(name) \
+  VulkanFn<::PFN_ ## name> name = sym(#name)
+
+namespace dxvk::vk {
+  
+  template<typename Fn>
+  class VulkanFn;
+  
+  /**
+   * \brief Vulkan function
+   * 
+   * Wraps an Vulkan function pointer and provides
+   * a call operator using the correct types.
+   */
+  template<typename Ret, typename... Args>
+  class VulkanFn<Ret (VKAPI_PTR*)(Args...)> {
+    using Fn = Ret (VKAPI_PTR*)(Args...);
+  public:
+    
+    VulkanFn() { }
+    VulkanFn(Fn ptr)
+    : m_fn(ptr) { }
+    
+    VulkanFn(PFN_vkVoidFunction ptr)
+    : m_fn(reinterpret_cast<Fn>(ptr)) { }
+    
+    /**
+     * \brief Invokes Vulkan function
+     * 
+     * \param [in] args Arguments
+     * \returns Function return value
+     */
+    Ret operator () (Args... args) const {
+      return (*m_fn)(args...);
+    }
+    
+  private:
+    
+    Fn m_fn = nullptr;
+    
+  };
+  
+}
diff --git a/src/vulkan/vulkan_names.h b/src/vulkan/vulkan_names.h
index 6752a12c..3f54e304 100644
--- a/src/vulkan/vulkan_names.h
+++ b/src/vulkan/vulkan_names.h
@@ -4,7 +4,7 @@
 
 #include "../util/util_enum.h"
 
-#include "vulkan_loader.h"
+#include "vulkan_loader_fn.h"
 
 std::ostream& operator << (std::ostream& os, VkPipelineCacheHeaderVersion e);
 std::ostream& operator << (std::ostream& os, VkResult e);
diff --git a/src/vulkan/vulkan_util.h b/src/vulkan/vulkan_util.h
index 97108ea6..b78da00e 100644
--- a/src/vulkan/vulkan_util.h
+++ b/src/vulkan/vulkan_util.h
@@ -1,6 +1,6 @@
 #pragma once
 
-#include "vulkan_loader.h"
+#include "vulkan_loader_fn.h"
 
 namespace dxvk::vk {
 
-- 
2.26.2

